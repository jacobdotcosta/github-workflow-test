{"version":3,"file":"index.esm.js","sources":["../src/scaffolder/QuarkusVersionList.tsx","../src/scaffolder/QuarkusExtensionList.tsx","../src/scaffolder/QuarkusQuickstartPicker.tsx","../src/plugin.ts"],"sourcesContent":["import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport {FieldExtensionComponentProps} from \"@backstage/plugin-scaffolder-react\";\nimport {Progress, Select, SelectItem} from \"@backstage/core-components\";\nimport useAsync from 'react-use/lib/useAsync';\n\n/* Example returned by code.quarkus.io/api/streams\n{\n    \"javaCompatibility\": {\n      \"recommended\": 17,\n      \"versions\": [\n        17,\n        21\n      ]\n    },\n    \"key\": \"io.quarkus.platform:3.8\",\n    \"lts\": false,\n    \"platformVersion\": \"3.8.2\",\n    \"quarkusCoreVersion\": \"3.8.2\",\n    \"recommended\": true,\n    \"status\": \"FINAL\"\n  }\n */\nexport interface Version {\n    key: string;\n    quarkusCoreVersion: string;\n    platformVersion: string;\n    lts: boolean;\n    recommended: boolean;\n    javaCompatibility: javaCompatibility[];\n    status: string;\n}\n\nexport interface javaCompatibility {\n    recommended: boolean;\n    versions: string[];\n}\n\nfunction userLabel(v: Version) {\n    const key = v.key.split(\":\")\n    if (v.recommended) {\n        return `${key[1]} (RECOMMENDED)`;\n    } else if (v.status !== \"FINAL\") {\n        return `${key[1]} (${v.status})`;\n    } else {\n        return key[1];\n    }\n}\n\nfunction findRecommendedVersion(versions: Version[]) {\n    let recommendedVersion = '';\n    versions.forEach((v: Version) => {\n        if (v.recommended) {\n            recommendedVersion = v.key\n        }\n    })\n    return recommendedVersion;\n}\n\nexport const QuarkusVersionList = (props: FieldExtensionComponentProps<string>) => {\n    const {\n        onChange,\n        rawErrors,\n        required,\n        formData,\n    } = props;\n\n    const codeQuarkusUrl = 'https://code.quarkus.io';\n    const apiStreamsUrl = `${codeQuarkusUrl}/api/streams`\n\n    const {loading, value} = useAsync(async () => {\n        const response = await fetch(apiStreamsUrl);\n        const newData = await response.json();\n\n        const recommendedVersion = findRecommendedVersion(newData);\n        console.log(`Recommended version: ${recommendedVersion}`)\n        formData !== undefined ? formData : onChange(recommendedVersion !== '' ? recommendedVersion : newData[0].key);\n\n        return newData;\n    });\n\n    const versionItems: SelectItem[] = value\n        ? value?.map((i: Version) => ({label: userLabel(i), value: i.key}))\n        : [{label: 'Loading...', value: 'loading'}];\n\n    if (loading) {\n        return <Progress/>;\n    } else {\n        return (\n            <FormControl\n                margin=\"normal\"\n                required={required}\n                error={rawErrors?.length > 0 && !formData}\n            >\n                <Select\n                    native\n                    label=\"Quarkus versions\"\n                    onChange={s => {\n                        onChange(String(Array.isArray(s) ? s[0] : s))\n                    }}\n                    selected={formData}\n                    items={versionItems}\n                />\n            </FormControl>)\n    }\n}\n\nexport default QuarkusVersionList;\n","import React, {useEffect} from 'react';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport styled from 'styled-components'\nimport { FieldProps } from '@rjsf/utils';\nimport FormControl from '@material-ui/core/FormControl';\nimport axios, {AxiosRequestConfig} from 'axios';\n\nconst Label = styled.label`\n    padding: 0 0 4px;\n    line-height: 1.5;\n    display: block;\n    font-size: 1rem;\n    font-family: \"Helvetica Neue\", Helvetica, Roboto, Arial, sans-serif;\n    font-weight: 400;\n    line-height: 1;\n`;\n\nconst InputWrapper = styled.div`\n    width: 300px;\n    border: 1px solid #d9d9d9;\n    background-color: #fff;\n    border-radius: 4px;\n    padding: 1px;\n    display: flex;\n    flex-wrap: wrap;\n\n    &:hover {\n        border-color: #40a9ff;\n    }\n\n    &.focused {\n        border-color: #40a9ff;\n        box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\n    }\n\n    & input {\n        font-size: 14px;\n        height: 30px;\n        box-sizing: border-box;\n        padding: 4px 6px;\n        width: 0;\n        min-width: 30px;\n        flex-grow: 1;\n        border: 0;\n        margin: 0;\n        outline: 0;\n    }\n`;\n\ninterface TagProps {\n    label: string;\n    onDelete?: () => void;\n}\nconst Tag = styled( ({ label, onDelete, ...props }: TagProps) => (\n    <div {...props}>\n        <span>{label}</span>\n        <CloseIcon onClick={onDelete} />\n    </div>\n))`\n    display: flex;\n    align-items: center;\n    height: 24px;\n    margin: 2px;\n    line-height: 22px;\n    background-color: #fafafa;\n    border: 1px solid #e8e8e8;\n    border-radius: 2px;\n    box-sizing: content-box;\n    padding: 0 4px 0 10px;\n    outline: 0;\n    overflow: hidden;\n\n    &:focus {\n        border-color: #40a9ff;\n        background-color: #e6f7ff;\n    }\n\n    & span {\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n    & svg {\n        font-size: 12px;\n        cursor: pointer;\n        padding: 4px;\n    }\n`;\n\nconst Listbox = styled.ul`\n    width: 300px;\n    margin: 2px 0 0;\n    padding: 0;\n    position: absolute;\n    list-style: none;\n    background-color: #fff;\n    overflow: auto;\n    max-height: 250px;\n    border-radius: 4px;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n    z-index: 1;\n\n    & li {\n        padding: 5px 12px;\n        display: flex;\n\n        & span {\n            flex-grow: 1;\n        }\n\n        & svg {\n            color: transparent;\n        }\n    }\n\n    & li[aria-selected='true'] {\n        background-color: #fafafa;\n        font-weight: 600;\n\n        & svg {\n            color: #1890ff;\n        }\n    }\n\n    & li[data-focus='true'] {\n        background-color: #e6f7ff;\n        cursor: pointer;\n\n        & svg {\n            color: #000;\n        }\n    }\n`;\n\nexport const QuarkusExtensionList =  ({ onChange, rawErrors, required, formData, uiSchema }: FieldProps<string[]>) => {\n    const {\n        getRootProps,\n        getInputLabelProps,\n        getInputProps,\n        getTagProps,\n        getListboxProps,\n        getOptionProps,\n        groupedOptions,\n        value,\n        focused,\n        setAnchorEl,\n    } = useAutocomplete({\n        id: 'quarkus-extension-list',\n        // TODO: Check if the code change does not break the logic of the plugin\n        defaultValue: quarkusExtensions && quarkusExtensions.length > 0 ? [{ id: quarkusExtensions[0].id, name: quarkusExtensions[0].name }] : [],\n        multiple: true,\n        options: uniqueExtensions(sortExtensions(quarkusExtensions)),\n        getOptionLabel: (option: {id: string, name: string}) => option.id,\n    });\n\n    const headers = {\n        'Content-Type': 'application/json', // Adjust as needed\n        'Access-Control-Allow-Origin' : '*',\n        'Access-Control-Allow-Methods': '*',\n    };\n    const axiosRequestConfig: AxiosRequestConfig = {\n        headers: headers\n    };\n\n  const codeQuarkusUrl = (uiSchema ?? {})['ui:options']?.codeQuarkusUrl ?? 'https://code.quarkus.io';\n  const apiUrl = `${codeQuarkusUrl}/api/extensions`\n  const filter = (uiSchema ?? {})['ui:options']?.filter ?? {};\n  const filteredExtensions = (filter as { extensions?: string[] })?.extensions ?? [];\n  const filteredCategories = (filter as { categories?: string[] })?.categories ?? [];\n  const filteredKeywords = (filter as { keywords?: string[] })?.keywords ?? [];\n\n  const filterExtension = (e: QuarkusExtensionType) => {\n          const matchingCategory = !filteredCategories || filteredCategories.length == 0 || filteredCategories.some(regex => !e.category || e.category.match(regex));\n          const matchingName = !filteredExtensions || filteredExtensions.length == 0 || filteredExtensions.some(regex => e.id.match(regex));\n          const matchingKeywords = !filteredKeywords || filteredKeywords.length == 0 || filteredKeywords.some(regex => !e.keywords || e.keywords.some(keyword => keyword.match(regex)));\n          return matchingCategory && matchingKeywords && matchingName;\n  }\n\n    // Download the Component list\n    useEffect(() => {\n        axios.get(apiUrl, axiosRequestConfig).then((response) => {\n            response.data.forEach((e: QuarkusExtensionType) => {\n                if (filterExtension(e)) {\n                  quarkusExtensions.push({ id: e.id, name: e.name })\n                }\n            })\n        }).catch((error) => {\n            console.log('Error fetching Quarkus Extensions:', error); \n        })\n    }, []);\n\n\n    // Populate value changes of autocomplete to the actual field\n    useEffect(() => {\n        onChange(value\n            .filter((extension: QuarkusExtensionType) => extension.id)\n            .map((extension: QuarkusExtensionType) => extension.id))\n    }, [value]);\n\n    // @ts-ignore\n    return (\n        <FormControl\n            margin=\"normal\"\n            required={required}\n            error={rawErrors && rawErrors?.length > 0 && !formData}\n        >\n            <div>\n                <div {...getRootProps()}>\n                    <Label {...getInputLabelProps()}>Quarkus Extension(s)</Label>\n                    <InputWrapper ref={setAnchorEl} className={focused ? 'focused' : ''}>\n                        {value.map((option: QuarkusExtensionType, index: number) => (\n                            option.name && <Tag label={option.name} {...getTagProps({ index })} />\n                        ))}\n                        <input {...getInputProps()} />\n                    </InputWrapper>\n                </div>\n                {groupedOptions.length > 0 ? (\n                    <Listbox {...getListboxProps()}>\n                        {groupedOptions.map((option, index) => (\n                            <li {...getOptionProps({ option, index })}>\n                                <span>{option.name}</span>\n                                <CheckIcon fontSize=\"small\" />\n                            </li>\n                        ))}\n                    </Listbox>\n                ) : null}\n            </div>\n        </FormControl>\n    );\n}\n\nfunction uniqueExtensions(extensions: QuarkusExtensionType[]): QuarkusExtensionType[] {\n   return extensions.filter((obj: QuarkusExtensionType, index: number, self: QuarkusExtensionType[]) =>\n       index === self.findIndex((e) => e.name === obj.name))\n}\n\nfunction sortExtensions(extensions: QuarkusExtensionType[]): QuarkusExtensionType[] {\n    return extensions.sort((a,b) => a.name.localeCompare(b.name))\n}\n\ninterface QuarkusExtensionType {\n    id: string\n    name: string;\n    description?: string;\n    category?: string;\n    keywords?: string[];\n}\n\n\nconst quarkusExtensions: QuarkusExtensionType[] = [];\nexport default QuarkusExtensionList;\n","/* eslint-disable no-use-before-define */\nimport React, { useEffect } from 'react';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport { FieldProps, FieldValidation } from '@rjsf/utils';\nimport FormControl from '@material-ui/core/FormControl';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  label: {\n    display: 'block',\n    color: 'rgba(0, 0, 0, 0.54)',\n    padding: 0,\n    fontSize: '1rem',\n    fontFamily: \"Helvetica Neue\",\n    fontWeight: 400,\n    lineHeight: 1,\n  },\n  input: {\n    width: 350,\n    padding: '3px',\n    margin: 1,\n    color: 'currentColor',\n    borderRadius: '4px',\n    fontSize: '1rem',\n    fontFamily: \"Helvetica Neue\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  listbox: {\n    width: 350,\n    margin: 1,\n    padding: '3px',\n    borderRadius: '4px',\n    zIndex: 1,\n    position: 'absolute',\n    listStyle: 'none',\n    fontSize: '1rem',\n    fontFamily: \"Helvetica Neue\",\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'auto',\n    maxHeight: 200,\n    border: '1px solid rgba(0,0,0,.25)',\n    '& li[data-focus=\"true\"]': {\n      backgroundColor: '#4a8df6',\n      color: 'white',\n      cursor: 'pointer',\n    },\n    '& li:active': {\n      backgroundColor: '#2977f5',\n      color: 'white',\n    },\n  },\n}));\nexport const QuarkusQuickstartPicker =  ({ onChange, rawErrors, required, formData }: FieldProps<string>) => {\n  const classes = useStyles(), {\n    getRootProps,\n    getInputLabelProps,\n    getInputProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n    value,\n  } = useAutocomplete({\n    id: 'quarkus-quickstarts',\n    defaultValue: quarkusQuickstarts[0],\n    multiple: false,\n    options: quarkusQuickstarts,\n    getOptionLabel: (option) => option,\n  });\n  // Download the Component list\n  useEffect(() => {\n      axios.get('https://api.github.com/repos/quarkusio/quarkus-quickstarts/contents').then((response) => {\n        response.data\n        .filter((e: { type: string; name: string; }) => e.type === 'dir' && e.name.endsWith('-quickstart'))\n        .forEach((e: { name: string; }) => {\n          quarkusQuickstarts.push(e.name)\n        })\n      })\n  }, []);\n\n\n  // Populate value changes of autocomplete to the actual field\n  useEffect(() => {\n    if (value) {\n      onChange(value)\n    }\n  }, [value]);\n\n  // @ts-ignore\n  return (\n    <FormControl\n      margin=\"normal\"\n      required={required}\n      error={rawErrors && rawErrors?.length > 0 && !formData}>\n      <div>\n          <div {...getRootProps()}>\n            <label className={classes.label} {...getInputLabelProps()}>\n              Quarkus Quickstart\n            </label>\n            <input className={classes.input} {...getInputProps()} />\n          </div>\n          {groupedOptions.length > 0 ? (\n            <ul className={classes.listbox} {...getListboxProps()}>\n              {groupedOptions.map((option, index) => (\n                <li {...getOptionProps({ option, index })}>{option}</li>\n              ))}\n            </ul>\n          ) : null}\n      </div>\n    </FormControl>\n  );\n}\n\nconst quarkusQuickstarts: string[] = [ ];\n\nexport const validateQuarkusQuickstart = (value: string, validation: FieldValidation) => { \n if (!quarkusQuickstarts.some((quickstart) => quickstart === value)) {\n     validation.addError(`Unknown quickstart: ${value}`);\n   }\n};\n\nexport default QuarkusQuickstartPicker;\n","import {scaffolderPlugin} from '@backstage/plugin-scaffolder';\nimport {createScaffolderFieldExtension, FieldExtensionComponent} from '@backstage/plugin-scaffolder-react';\nimport {QuarkusVersionList} from './scaffolder/QuarkusVersionList';\nimport {QuarkusExtensionList} from './scaffolder/QuarkusExtensionList';\nimport {QuarkusQuickstartPicker, validateQuarkusQuickstart} from './scaffolder/QuarkusQuickstartPicker';\n\nexport const QuarkusExtensionListField: FieldExtensionComponent<string, string> = scaffolderPlugin.provide(\n    createScaffolderFieldExtension({\n        name: 'QuarkusExtensionList',\n        component: QuarkusExtensionList,\n    }),\n), QuarkusVersionListField: FieldExtensionComponent<string, string> = scaffolderPlugin.provide(\n    createScaffolderFieldExtension({\n        name: 'QuarkusVersionList',\n        component: QuarkusVersionList,\n    }),\n), QuarkusQuickstartPickerField: FieldExtensionComponent<string, string> = scaffolderPlugin.provide(\n    createScaffolderFieldExtension({\n        name: 'QuarkusQuickstartPicker',\n        component: QuarkusQuickstartPicker,\n        validation: validateQuarkusQuickstart,\n    }),\n);\n"],"names":[],"mappings":"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"}